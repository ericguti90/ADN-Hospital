

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author ADN
 */
public class SintomaPanel extends javax.swing.JPanel {

    private DefaultListModel modelSin;
    private DefaultListModel sinModelPat;
    private ArrayList<String> sinListaPat;
    /**
     * Creates new form SintomaPanel
     */
    public SintomaPanel() {
        
        initComponents();
        
        //Inicilitza llistes
        sinListaPat     = new ArrayList();
        
        //Inicialitza models
        modelSin = new DefaultListModel();
        sinModelPat = new DefaultListModel();
        
        sinPatLista.setModel(sinModelPat);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        sinElimPat = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        sinPatLista = new javax.swing.JList();
        sinPatNueva = new javax.swing.JButton();
        sinPatAn = new javax.swing.JButton();
        sinPatBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        sinGuardarCambios = new javax.swing.JButton();
        sinRestablecer = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sinNombre = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        sinDescripcion = new javax.swing.JTextArea();
        jLabel41 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane20 = new javax.swing.JScrollPane();
        sinListaNombre = new javax.swing.JList();
        sinConsulta = new javax.swing.JButton();
        sinEliminar = new javax.swing.JButton();

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sinElimPat.setText("Eliminar patologia");
        sinElimPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinElimPatActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(sinPatLista);

        sinPatNueva.setText("Añadir nueva");
        sinPatNueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinPatNuevaActionPerformed(evt);
            }
        });

        sinPatAn.setText("Asociar");
        sinPatAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinPatAnActionPerformed(evt);
            }
        });

        jLabel12.setText("Añadir patologias:");

        jLabel13.setText("Patologias:");

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel42.setText("Patologias que desarrollan el sintoma:");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sinElimPat))
                    .addComponent(jLabel13)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sinPatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addComponent(sinPatAn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sinPatNueva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sinPatBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sinPatAn)
                        .addComponent(sinPatNueva)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(sinElimPat, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sinGuardarCambios.setText("Guardar");
        sinGuardarCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinGuardarCambiosActionPerformed(evt);
            }
        });

        sinRestablecer.setText("Restablecer");
        sinRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinRestablecerActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sinGuardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sinRestablecer, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sinGuardarCambios, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(sinRestablecer, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Descripcion:");

        jLabel1.setText("Nombre:");

        sinNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sinNombreKeyTyped(evt);
            }
        });

        sinDescripcion.setColumns(20);
        sinDescripcion.setLineWrap(true);
        sinDescripcion.setRows(5);
        sinDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sinDescripcionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(sinDescripcion);

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel41.setText("Datos:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel41))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sinNombre))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel41)
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(sinNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel33.setMaximumSize(new java.awt.Dimension(119, 262));

        jLabel3.setText("Lista de sintomas:");

        sinListaNombre.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane20.setViewportView(sinListaNombre);

        sinConsulta.setText("Consulta");
        sinConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinConsultaActionPerformed(evt);
            }
        });

        sinEliminar.setText("Eliminar sintoma");
        sinEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sinConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sinEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sinConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sinEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sinElimPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinElimPatActionPerformed
        if (false == sinPatLista.isSelectionEmpty()) {
            int pos = sinPatLista.getSelectedIndex();
            sinModelPat.remove(pos);
        }
    }//GEN-LAST:event_sinElimPatActionPerformed

    private void sinPatNuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinPatNuevaActionPerformed
        CtrlPresSintoma.muestraTabPatologia();
    }//GEN-LAST:event_sinPatNuevaActionPerformed

    private void sinPatAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinPatAnActionPerformed
        ArrayList<String> aux = CtrlPresSintoma.getNombrePatologias();
        int opcio = sinPatBox.getSelectedIndex();
        if (noContiene(sinModelPat, aux.get(opcio))) {
            sinModelPat.addElement(aux.get(opcio));
            sinPatLista.setModel(sinModelPat);
        }
    }//GEN-LAST:event_sinPatAnActionPerformed

    private void sinGuardarCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinGuardarCambiosActionPerformed
        if (sinNombre.getText().equals("") || sinDescripcion.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan campos por rellenar.\nEs necesario rellenar todos los campos de DATOS.", "Aviso", JOptionPane.ERROR_MESSAGE);
        } else {
            if (CtrlPresSintoma.existeSintoma(sinNombre.getText())) {
                int opcio = JOptionPane.showConfirmDialog(null, "¿Quieres modificar la patologia " + sinNombre.getText() + "?");
                if (opcio == 0) {
                    guardaCambiosSintoma();
                }
            } else {
                guardaCambiosSintoma();
            }
        }
    }//GEN-LAST:event_sinGuardarCambiosActionPerformed

    private void sinRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinRestablecerActionPerformed
        restablecerTabSintoma();
    }//GEN-LAST:event_sinRestablecerActionPerformed

    private void sinNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sinNombreKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_sinNombreKeyTyped

    private void sinDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sinDescripcionKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ') && (caracter != ',') && (caracter != '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_sinDescripcionKeyTyped

    private void sinConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinConsultaActionPerformed
        restablecerTabSintoma();

        if (false == sinListaNombre.isSelectionEmpty()) {
            String t = sinListaNombre.getSelectedValue().toString();
            ArrayList<String> p = CtrlPresSintoma.getSintoma(t);
            if (p.size() > 0) {
                sinNombre.setText(p.get(0));
                sinDescripcion.setText(p.get(1));
                // Patologias que lo contienen
                for (int i = 2; i < p.size(); i++) {
                    sinModelPat.addElement(p.get(i));
                }
                sinPatLista.setModel(sinModelPat);
            }
        }
    }//GEN-LAST:event_sinConsultaActionPerformed

    private void sinEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinEliminarActionPerformed
        if (false == sinListaNombre.isSelectionEmpty()) {
            int pos = sinListaNombre.getSelectedIndex();
            CtrlPresSintoma.eliminarSintoma(sinListaNombre.getSelectedValue().toString());
            modelSin.remove(pos);
        }
        CtrlPresSintoma.actualizaSintomas();
    }//GEN-LAST:event_sinEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton sinConsulta;
    private javax.swing.JTextArea sinDescripcion;
    private javax.swing.JButton sinElimPat;
    private javax.swing.JButton sinEliminar;
    private javax.swing.JButton sinGuardarCambios;
    private javax.swing.JList sinListaNombre;
    private javax.swing.JTextField sinNombre;
    private javax.swing.JButton sinPatAn;
    private javax.swing.JComboBox sinPatBox;
    private javax.swing.JList sinPatLista;
    private javax.swing.JButton sinPatNueva;
    private javax.swing.JButton sinRestablecer;
    // End of variables declaration//GEN-END:variables

    public void guardarFicheroSin() {
        //Es crea el filechooser
        JFileChooser direc = new JFileChooser();
        //Títol de finestra
        direc.setDialogTitle("Guardar fichero de sintomas");
        //Canviar el text del boto
        direc.setApproveButtonText("Guardar");
        int result = direc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) CtrlPresSintoma.guardarSintomas(direc);
    }
    
    public void guardaCambiosSintoma() {
        // Recoger patologias
        cargarListasSintoma();
        // Generar array
        ArrayList<String> sinL = new ArrayList();
        sinL.add(sinNombre.getText());
        sinL.add(sinDescripcion.getText());
        sinL.addAll(sinListaPat);

        CtrlPresSintoma.nuevoSintoma( sinL );
        // Formato: nombre, descripcion, pat1,..., patN

        CtrlPresSintoma.actualizaSintomas();
        restablecerTabSintoma();
    }
    
    public void inicializarModelosSin() {
        sinModelPat.clear();
        //Assigna
        sinPatLista.setModel(sinModelPat);
    }
    
    public void restablecerTabSintoma() {
        //Text
        sinNombre.setText("");
        sinDescripcion.setText("");
        //Arrays
        sinListaPat.clear();
        //Modelos y lists
        inicializarModelosSin();
    }
    
    public void cargarListasSintoma() {
        //Lista Patologias
        sinListaPat.clear();
        int size = sinModelPat.getSize();
        for (int i = 0; i < size; i++) sinListaPat.add(sinModelPat.getElementAt(i).toString());
    }
    
    public void actualizaSintomas() {
        ArrayList<String> aux = CtrlPresSintoma.getNombreSintomas();
        // Lista de consulta
        modelSin.clear();
        for(int i = 0; i < aux.size(); i++)modelSin.addElement(aux.get(i));
        sinListaNombre.setModel(modelSin);
    }
    
    public void actualizaPatologias() {
        ArrayList<String> aux = CtrlPresSintoma.getNombrePatologias();
        sinPatBox.removeAllItems();
        for(int i = 0; i < aux.size(); i++) sinPatBox.addItem(aux.get(i));
    }
    
     //___________ALTRES FUNCIONS____________
    private boolean noContiene(DefaultListModel model, String nom) {
        int size = model.getSize();
        for (int i = 0; i < size; i++) if(model.getElementAt(i).toString().equals(nom)) return false;
        return true;
    }


}
