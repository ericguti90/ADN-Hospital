

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author Ferran
 */
public class PatologiaPanel extends javax.swing.JPanel {

    private DefaultListModel modelPat;
    private DefaultListModel patModelPat;
    private DefaultListModel patModelSin;
    private ArrayList<String> patListaPat;
    private ArrayList<String> patListaSin;
    /**
     * Creates new form PatologiaPanel
     */
    public PatologiaPanel() {
        
        initComponents();
                
        //Inicilitza llistes;
        patListaPat = new ArrayList();
        patListaSin = new ArrayList();
        
        //Inicialitza models
        modelPat = new DefaultListModel();
        patModelPat = new DefaultListModel();
        patModelSin = new DefaultListModel();
        
        patModelPat.clear();
        patModelSin.clear();
        //Assigna
        patPatLista.setModel(patModelPat);
        patSinLista.setModel(patModelSin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel16 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        patListaNombre = new javax.swing.JList();
        patElimina = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        patNombre = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        patDescripcion = new javax.swing.JTextArea();
        jPanel28 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        patSinBox = new javax.swing.JComboBox();
        patSinAn = new javax.swing.JButton();
        patSinNuevo = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        patSinLista = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        patElimSin = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        patPatBox = new javax.swing.JComboBox();
        patPatAn = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        patPatLista = new javax.swing.JList();
        patElimPat = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        patGuardaCambios = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        patRestablecer = new javax.swing.JButton();
        jPanel29 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        patResArea = new javax.swing.JTextArea();
        jLabel44 = new javax.swing.JLabel();
        patGeneralizada = new javax.swing.JTextField();
        patConsulta = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        patListaNombre.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(patListaNombre);

        patElimina.setText("Eliminar patologia");
        patElimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patEliminaActionPerformed(evt);
            }
        });

        jPanel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel37.setText("Nombre:");

        jLabel38.setText("Descripcion:");

        patNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patNombreKeyTyped(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Datos:");

        patDescripcion.setColumns(20);
        patDescripcion.setLineWrap(true);
        patDescripcion.setRows(3);
        patDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                patDescripcionKeyTyped(evt);
            }
        });
        jScrollPane8.setViewportView(patDescripcion);

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel27Layout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(21, 21, 21)
                                .addComponent(patNombre)))
                        .addContainerGap())
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel38))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setText("Añadir sintomas:");

        patSinAn.setText("Asociar");
        patSinAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patSinAnActionPerformed(evt);
            }
        });

        patSinNuevo.setText("Añadir nuevo");
        patSinNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patSinNuevoActionPerformed(evt);
            }
        });

        patSinLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane10.setViewportView(patSinLista);

        jLabel15.setText("Sintomas añadidos:");

        patElimSin.setText("Eliminar");
        patElimSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patElimSinActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setText("Sintomas caracteristicos:");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel48)
                    .addComponent(jLabel15)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanel28Layout.createSequentialGroup()
                                .addComponent(patSinBox, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patSinAn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patSinNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patElimSin, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(patSinBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patSinAn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patSinNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane10))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(patElimSin, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setText("Patologias similares:");

        patPatAn.setText("Asociar");
        patPatAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patPatAnActionPerformed(evt);
            }
        });

        jLabel16.setText("Añadir patologias:");

        patPatLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane11.setViewportView(patPatLista);

        patElimPat.setText("Eliminar");
        patElimPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patElimPatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patElimPat))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patPatBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patPatAn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(patPatBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patPatAn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(patElimPat, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel32.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        patGuardaCambios.setText("Guardar");
        patGuardaCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patGuardaCambiosActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        patRestablecer.setText("Restablecer campos");
        patRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patRestablecerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patGuardaCambios, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(patRestablecer)
                .addContainerGap())
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(patRestablecer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patGuardaCambios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("Ristra generalizada:");

        patResArea.setColumns(20);
        patResArea.setEditable(false);
        patResArea.setLineWrap(true);
        patResArea.setRows(5);
        jScrollPane18.setViewportView(patResArea);

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText("Resultados obtenidos:");

        patGeneralizada.setEditable(false);

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(patGeneralizada, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patGeneralizada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane18)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        patConsulta.setText("Consulta");
        patConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patConsultaActionPerformed(evt);
            }
        });

        jLabel5.setText("Lista de patologias:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(patElimina, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                        .addComponent(patConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patElimina, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1210, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void patEliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patEliminaActionPerformed
        if (false == patListaNombre.isSelectionEmpty()) {
            int pos = patListaNombre.getSelectedIndex();
            CtrlPresPatologia.eliminarPatologia(patListaNombre.getSelectedValue().toString());
            modelPat.remove(pos);
        }
        CtrlPresPatologia.actualizaPatologias();
    }//GEN-LAST:event_patEliminaActionPerformed

    private void patNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patNombreKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_patNombreKeyTyped

    private void patDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patDescripcionKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ') && (caracter != ',') && (caracter != '.')) {
            evt.consume();
        }
    }//GEN-LAST:event_patDescripcionKeyTyped

    private void patSinAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patSinAnActionPerformed
        ArrayList<String> aux = CtrlPresPatologia.getNombreSintomas();
        int opcio = patSinBox.getSelectedIndex();
        if (opcio != -1 && noContiene(patModelSin, aux.get(opcio))) {
            patModelSin.addElement(aux.get(opcio));
            patSinLista.setModel(patModelSin);
        }
    }//GEN-LAST:event_patSinAnActionPerformed

    private void patSinNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patSinNuevoActionPerformed
        CtrlPresPatologia.muestraTabSintoma();
    }//GEN-LAST:event_patSinNuevoActionPerformed

    private void patElimSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patElimSinActionPerformed
        if (false == patSinLista.isSelectionEmpty()) {
            int pos = patSinLista.getSelectedIndex();
            patModelSin.remove(pos);
        }
    }//GEN-LAST:event_patElimSinActionPerformed

    private void patPatAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patPatAnActionPerformed
        ArrayList<String> aux = CtrlPresPatologia.getNombrePatologias();
        int opcio = patPatBox.getSelectedIndex();
        if (opcio != -1 && (patNombre.getText().equals(aux.get(opcio)) == false) && noContiene(patModelPat, aux.get(opcio))) {
            patModelPat.addElement(aux.get(opcio));
            patPatLista.setModel(patModelPat);
        }
    }//GEN-LAST:event_patPatAnActionPerformed

    private void patElimPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patElimPatActionPerformed
        if (false == patPatLista.isSelectionEmpty()) {
            int pos = patPatLista.getSelectedIndex();
            patModelPat.remove(pos);
        }
    }//GEN-LAST:event_patElimPatActionPerformed

    private void patGuardaCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patGuardaCambiosActionPerformed
        if (patNombre.getText().equals("") || patDescripcion.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan campos por rellenar.\nEs necesario rellenar todos los campos de DATOS.", "Aviso", JOptionPane.ERROR_MESSAGE);
        } else {
            if (CtrlPresPatologia.existePatologia(patNombre.getText())) {
                int opcio = JOptionPane.showConfirmDialog(null, "¿Quieres modificar la patologia " + patNombre.getText() + "?");
                if (opcio == 0) {
                    guardaCambiosPatologia();
                }
            } else {
                guardaCambiosPatologia();
            }
        }
    }//GEN-LAST:event_patGuardaCambiosActionPerformed

    private void patRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patRestablecerActionPerformed
        restablecerTabPatologia();
    }//GEN-LAST:event_patRestablecerActionPerformed

    private void patConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patConsultaActionPerformed
        restablecerTabPatologia();
        // Consulta la patologia
        if (false == patListaNombre.isSelectionEmpty()) {
            String t = patListaNombre.getSelectedValue().toString();
            ArrayList<String> p = CtrlPresPatologia.getPatologia(t);
            if (p.size() > 0) {
                int cont, max, aux;
                patModelPat = new DefaultListModel();
                patModelSin = new DefaultListModel();

                patNombre.setText(p.get(0));
                patDescripcion.setText(p.get(1));
                
                if (p.get(2).equals("no_existe"))patGeneralizada.setText("No se ha calculado aun su ristra generalizada.");
                else patGeneralizada.setText(p.get(2));
                // Patologias relacionadas
                max = Integer.parseInt(p.get(3));
                cont = 4;
                for (int i = 4; i < max + 4 && i < p.size(); i++) {
                    patModelPat.addElement(p.get(i));
                    cont = i + 1;
                }
                patPatLista.setModel(patModelPat);
                // Sintomas relacionados
                max = Integer.parseInt(p.get(cont));
                cont++;
                aux = cont;
                for (int i = cont; i < max + aux && i < p.size(); i++) {
                    patModelSin.addElement(p.get(i));
                    cont = i + 1;
                }
                patSinLista.setModel(patModelSin);
                // Resultados
                max = Integer.parseInt(p.get(cont));
                t = "";
                for (int i = cont + 1; i < max + cont + 1 && i < p.size(); i++) {
                    t = t + p.get(i) + "\n";
                }
                patResArea.setText(t);
            }
        }
    }//GEN-LAST:event_patConsultaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton patConsulta;
    private javax.swing.JTextArea patDescripcion;
    private javax.swing.JButton patElimPat;
    private javax.swing.JButton patElimSin;
    private javax.swing.JButton patElimina;
    private javax.swing.JTextField patGeneralizada;
    private javax.swing.JButton patGuardaCambios;
    private javax.swing.JList patListaNombre;
    private javax.swing.JTextField patNombre;
    private javax.swing.JButton patPatAn;
    private javax.swing.JComboBox patPatBox;
    private javax.swing.JList patPatLista;
    private javax.swing.JTextArea patResArea;
    private javax.swing.JButton patRestablecer;
    private javax.swing.JButton patSinAn;
    private javax.swing.JComboBox patSinBox;
    private javax.swing.JList patSinLista;
    private javax.swing.JButton patSinNuevo;
    // End of variables declaration//GEN-END:variables
    
    public void guardarFicheroPat() {
        //Es crea el filechooser
        JFileChooser direc = new JFileChooser();
        //Títol de finestra
        direc.setDialogTitle("Guardar fichero de patologias");
        //Canviar el text del boto
        direc.setApproveButtonText("Guardar");
        int result = direc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) CtrlPresPatologia.guardarPatologias(direc);
    }
    
    public void guardaCambiosPatologia() {
        //Recojer listas
        cargarListasPatologia();
        //Generar array
        ArrayList<String> patL = new ArrayList();
        patL.add(patNombre.getText());
        patL.add(patDescripcion.getText());
        patL.add(Integer.toString(patListaPat.size()));
        patL.addAll(patListaPat);
        patL.add(Integer.toString(patListaSin.size()));
        patL.addAll(patListaSin);

        CtrlPresPatologia.nuevaPatologia( patL );
        // Formato: Nombre, Descripcion, numPat, pat1,...,patN, numSintomas, sintoma1,...sintoman

        CtrlPresPatologia.actualizaPatologias();
        restablecerTabPatologia(); 
    }
    
    public void inicializarModelosPat() {
        patModelPat.clear();
        patModelSin.clear();
        //Assigna
        patPatLista.setModel(patModelPat);
        patSinLista.setModel(patModelSin);
    }

    public void restablecerTabPatologia() {
        // Text
        patNombre.setText("");
        patDescripcion.setText("");
        patResArea.setText("");
        patGeneralizada.setText("");
        //Arrays
        patListaPat.clear();
        patListaSin.clear();
        //Modelos y lists
        inicializarModelosPat();
    }
    
    public void cargarListasPatologia() {
        patListaPat.clear();
        patListaSin.clear();
        //Lista Patologias
        int size = patModelPat.getSize();
        for (int i = 0; i < size; i++) patListaPat.add(patModelPat.getElementAt(i).toString());
        //Lista Sintomas
        size = patModelSin.getSize();
        for (int i = 0; i < size; i++) patListaSin.add(patModelSin.getElementAt(i).toString());
    }   

    public void actualizaPatologias() {        
        ArrayList<String> aux = CtrlPresPatologia.getNombrePatologias();
        // Lista de consulta
        modelPat.clear();
        for(int i = 0; i < aux.size(); i++) modelPat.addElement(aux.get(i));
        patListaNombre.setModel(modelPat);
        // Actualiza comboBoxes
        patPatBox.removeAllItems();
        for(int i = 0; i < aux.size(); i++) patPatBox.addItem(aux.get(i));
    }
    
    public void actualizaSintomas(){
        ArrayList<String> aux = CtrlPresPatologia.getNombreSintomas();
        patSinBox.removeAllItems();
        for(int i = 0; i < aux.size(); i++) patSinBox.addItem(aux.get(i));
    }
    
    //___________ALTRES FUNCIONS____________
    private boolean noContiene(DefaultListModel model, String nom) {
        int size = model.getSize();
        for (int i = 0; i < size; i++) if(model.getElementAt(i).toString().equals(nom)) return false;
        return true;
    }
}
