

import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author ADN
 */
public class PacientePanel extends javax.swing.JPanel {

    private ArrayList<String> listaAdn;
    private ArrayList<Integer> listaEdad;
    private ArrayList<String> pacListaPat;
    private ArrayList<String> pacListaSin;
    
    private DefaultListModel modelPac;
    private DefaultListModel pacModelAdn;
    private DefaultListModel pacModelPat;
    private DefaultListModel pacModelSin;
    /**
     * Creates new form pacientePanel
     */
    public PacientePanel() {
        initComponents();
        
        //Inicialitza llistes;
        listaAdn    = new ArrayList();
        listaEdad   = new ArrayList();
        pacListaPat = new ArrayList();
        pacListaSin = new ArrayList();
        
         //Inicialitza models
        modelPac    = new DefaultListModel();
        pacModelAdn = new DefaultListModel();
        pacModelPat = new DefaultListModel();
        pacModelSin = new DefaultListModel();
        
        //Assigna models a llistes
        pacAdnList.setModel(pacModelAdn);
        pacPatDiagList.setModel(pacModelPat);
        pacSinList.setModel(pacModelSin);
        
        //Inicialitza ComboBox
        pacSexoBox.addItem("masculino");
        pacSexoBox.addItem("femenino");
        for(int i = 0; i < 113; i++) pacAnoBox.addItem(Integer.toString(i + 1900));
        for(int i = 0; i < 111; i++) pacEdadBox.addItem(Integer.toString(i + 1));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel12 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        pacListaId = new javax.swing.JList();
        pacEliminaPaciente = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pacNumHist = new javax.swing.JTextField();
        pacAnoBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        pacSexoBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pacNombre = new javax.swing.JTextField();
        pacApellido1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        pacApellido2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        pacPacPotArea = new javax.swing.JTextArea();
        jPanel17 = new javax.swing.JPanel();
        pacRestablecer = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        pacNuevo = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        pacEdadBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pacAdnText = new javax.swing.JTextArea();
        pacAdnAn = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pacAdnList = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        pacEliminaAdn = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        pacConsulta = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        pacPatDiagBox = new javax.swing.JComboBox();
        pacPatDiagAna = new javax.swing.JButton();
        pacAnadirPat = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        pacPatDiagList = new javax.swing.JList();
        pacEliminaPatDiag = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        pacSinBox = new javax.swing.JComboBox();
        pacSinAn = new javax.swing.JButton();
        pacSinNuevo = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        pacSinList = new javax.swing.JList();
        pacEliminaSin = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();

        pacListaId.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        pacListaId.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(pacListaId);

        pacEliminaPaciente.setText("Eliminar paciente");
        pacEliminaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacEliminaPacienteActionPerformed(evt);
            }
        });

        jPanel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel32.setText("Datos personales:");

        jLabel17.setText("Numero de historial: ");

        pacNumHist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pacNumHistKeyTyped(evt);
            }
        });

        jLabel7.setText("AÃ±o de nacimiento:");

        pacSexoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacSexoBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Sexo( m/f ):");

        jLabel11.setText("Nombre:");

        pacNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacNombreActionPerformed(evt);
            }
        });
        pacNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pacNombreKeyTyped(evt);
            }
        });

        pacApellido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pacApellido1KeyTyped(evt);
            }
        });

        jLabel18.setText("Primer apellido:");

        pacApellido2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pacApellido2KeyTyped(evt);
            }
        });

        jLabel19.setText("Segundo apellido:");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addGroup(jPanel22Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pacSexoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pacAnoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel22Layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addComponent(jLabel11))
                                .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pacApellido1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pacNombre, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pacNumHist)
                            .addComponent(pacApellido2))))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(pacNumHist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pacNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(pacApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(pacApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(pacSexoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pacAnoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setText("PatologÃ­as potenciales:");

        pacPacPotArea.setColumns(20);
        pacPacPotArea.setEditable(false);
        pacPacPotArea.setRows(5);
        jScrollPane4.setViewportView(pacPacPotArea);

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pacRestablecer.setText("Restablecer");
        pacRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacRestablecerActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        pacNuevo.setText("Guardar");
        pacNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pacNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pacRestablecer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pacNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pacRestablecer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pacEdadBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacEdadBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Edad de la secuencia:");

        jLabel6.setText("Introduce secuencia de ADN (A, C, G, T):");

        pacAdnText.setColumns(20);
        pacAdnText.setLineWrap(true);
        pacAdnText.setRows(5);
        pacAdnText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pacAdnTextKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(pacAdnText);

        pacAdnAn.setText("AÃ±adir");
        pacAdnAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacAdnAnActionPerformed(evt);
            }
        });

        pacAdnList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(pacAdnList);

        jLabel9.setText("Lista definitiva:");

        pacEliminaAdn.setText("Eliminar");
        pacEliminaAdn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacEliminaAdnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap())
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacEliminaAdn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pacEliminaAdn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("Secuencias de Adn:");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel50)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pacAdnAn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pacEdadBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(20, 20, 20)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(pacEdadBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pacAdnAn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pacConsulta.setText("Consulta");
        pacConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacConsultaActionPerformed(evt);
            }
        });

        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel33.setText("Patologias diagnosticadas:");

        jLabel20.setText("AÃ±adir patologia:");

        pacPatDiagAna.setText("Asociar");
        pacPatDiagAna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacPatDiagAnaActionPerformed(evt);
            }
        });

        pacAnadirPat.setText("AÃ±adir nueva");
        pacAnadirPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacAnadirPatActionPerformed(evt);
            }
        });

        pacPatDiagList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane12.setViewportView(pacPatDiagList);

        pacEliminaPatDiag.setText("Eliminar");
        pacEliminaPatDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacEliminaPatDiagActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Sintomas diagnosticados:");

        jLabel21.setText("AÃ±adir sintoma:");

        pacSinAn.setLabel("Asociar");
        pacSinAn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacSinAnActionPerformed(evt);
            }
        });

        pacSinNuevo.setText("AÃ±adir nuevo");
        pacSinNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacSinNuevoActionPerformed(evt);
            }
        });

        pacSinList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane13.setViewportView(pacSinList);

        pacEliminaSin.setText("Eliminar");
        pacEliminaSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacEliminaSinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pacAnadirPat, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(pacEliminaPatDiag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pacPatDiagBox, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pacPatDiagAna, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel36))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacSinBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacSinAn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pacSinNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(pacEliminaSin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(pacPatDiagBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pacPatDiagAna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(pacAnadirPat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pacEliminaPatDiag, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(pacSinBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pacSinAn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(pacSinNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pacEliminaSin, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane13))
                .addContainerGap())
        );

        jLabel22.setText("Lista de pacientes:");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addComponent(pacConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pacEliminaPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacEliminaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pacSexoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacSexoBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pacSexoBoxActionPerformed

    private void pacNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pacNombreActionPerformed

    
    private void pacEliminaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacEliminaPacienteActionPerformed
        if (false == pacListaId.isSelectionEmpty()) {
            int pos = pacListaId.getSelectedIndex();
            CtrlPresPaciente.eliminaPaciente(Integer.parseInt(pacListaId.getSelectedValue().toString()));
            modelPac.remove(pos);
        }
        CtrlPresPaciente.actualizaPacientes();
    }//GEN-LAST:event_pacEliminaPacienteActionPerformed

    private void pacNumHistKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pacNumHistKeyTyped
        char caracter = evt.getKeyChar();
        if ((caracter < '0') || (caracter > '9')) {
            evt.consume();
        }
    }//GEN-LAST:event_pacNumHistKeyTyped

    private void pacNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pacNombreKeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_pacNombreKeyTyped

    private void pacApellido1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pacApellido1KeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_pacApellido1KeyTyped

    private void pacApellido2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pacApellido2KeyTyped
        char caracter = evt.getKeyChar();
        if (((caracter < 'A') || (caracter > 'z')) && (caracter != ' ')) {
            evt.consume();
        }
    }//GEN-LAST:event_pacApellido2KeyTyped

    private void pacRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacRestablecerActionPerformed
        restablecerTabPaciente();
    }//GEN-LAST:event_pacRestablecerActionPerformed

    private void pacNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacNuevoActionPerformed
        if (pacNumHist.getText().equals("") || pacNombre.getText().equals("") || pacApellido1.getText().equals("") || pacApellido2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan campos por rellenar.\nEs necesario rellenar todos los campos de DATOS.", "Aviso", JOptionPane.ERROR_MESSAGE);
        } else {
            if (CtrlPresPaciente.existePaciente(pacNumHist.getText())) {
                int opcio = JOptionPane.showConfirmDialog(null, "Â¿Quieres modificar el paciente " + pacNumHist.getText() + "?");
                if (opcio == 0) {
                    guardaCambiosPaciente();
                }
            } else {
                guardaCambiosPaciente();
            }
        }
    }//GEN-LAST:event_pacNuevoActionPerformed

    private void pacEdadBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacEdadBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pacEdadBoxActionPerformed

    private void pacAdnTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pacAdnTextKeyTyped
        char caracter = evt.getKeyChar();
        if ((caracter != 'A') && (caracter != 'C') && (caracter != 'G') && (caracter != 'T')) {
            evt.consume();
        }
    }//GEN-LAST:event_pacAdnTextKeyTyped

    private void pacAdnAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacAdnAnActionPerformed
        if(!pacAdnText.getText().equals("")){
            pacModelAdn.addElement("Edad: " + (pacEdadBox.getSelectedIndex() + 1) + " Ristra: " + pacAdnText.getText());
            pacAdnList.setModel(pacModelAdn);
        }
    }//GEN-LAST:event_pacAdnAnActionPerformed

    private void pacEliminaAdnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacEliminaAdnActionPerformed
        if (false == pacAdnList.isSelectionEmpty()) {
            pacModelAdn.remove(pacAdnList.getSelectedIndex());
            pacAdnList.setModel(pacModelAdn);
        }
    }//GEN-LAST:event_pacEliminaAdnActionPerformed

    private void pacConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacConsultaActionPerformed
        // Consulta el paciente
        restablecerTabPaciente();
        if (false == pacListaId.isSelectionEmpty()) {
            String t;
            int aux = Integer.parseInt(pacListaId.getSelectedValue().toString());
            ArrayList<String> p = CtrlPresPaciente.getPaciente(aux);
            if (p.size() > 0) {
                int cont, max;
                pacModelSin = new DefaultListModel();
                pacModelPat = new DefaultListModel();

                pacNumHist.setText(Integer.toString(aux));
                pacNombre.setText(p.get(0));
                pacApellido1.setText(p.get(1));
                pacApellido2.setText(p.get(2));
                if (p.get(3).equals("m")) {
                    pacSexoBox.setSelectedIndex(0);
                } else if (p.get(3).equals("f")) {
                    pacSexoBox.setSelectedIndex(1);
                }
                pacAnoBox.setSelectedIndex(Integer.parseInt(p.get(4)) - 1900);

                // Ristras de ADN
                max = Integer.parseInt(p.get(5));
                cont = 6;
                for (int i = 6; i < max + 6 && i < p.size(); i++) {
                    listaAdn.add(p.get(i));
                    cont = i + 1;
                }
                // Edades de ADN
                max = Integer.parseInt(p.get(cont));
                cont++;
                aux = cont;
                for (int i = cont; i < max + aux && i < p.size(); i++) {
                    listaEdad.add(Integer.parseInt(p.get(i)));
                    cont = i + 1;
                }
                // Lo enviamos a la lista
                for (int i = 0; i < listaAdn.size(); i++) {
                    pacModelAdn.addElement("Edad: " + listaEdad.get(i) + " Ristra: " + listaAdn.get(i));
                }
                pacAdnList.setModel(pacModelAdn);

                // Patologias diagnosticadas
                max = Integer.parseInt(p.get(cont));
                cont++;
                aux = cont;
                for (int i = cont; i < max + aux && i < p.size(); i++) {
                    pacModelPat.addElement(p.get(i));
                    cont = i + 1;
                }
                pacPatDiagList.setModel(pacModelPat);

                // Patologias potenciales 
                max = Integer.parseInt(p.get(cont));
                cont++;
                aux = cont;
                t = "";
                for (int i = cont; i < max + aux && i < p.size(); i++) {
                    t = t + p.get(i) + "\n";
                    cont = i + 1;
                }
                pacPacPotArea.setText(t);

                // Sintomas
                max = Integer.parseInt(p.get(cont));
                for (int i = cont + 1; i < max + cont+1 && i < p.size(); i++) {
                    pacModelSin.addElement(p.get(i));
                }
                pacSinList.setModel(pacModelSin);

                // Extres
                pacAdnText.setText("");
            }
        }
    }//GEN-LAST:event_pacConsultaActionPerformed

    private void pacPatDiagAnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacPatDiagAnaActionPerformed
        ArrayList<String> aux = CtrlPresPaciente.getNombrePatologias();
        int opcio = pacPatDiagBox.getSelectedIndex();
        if (opcio != -1 && noContiene(pacModelPat, aux.get(opcio))) {
            pacModelPat.addElement(aux.get(opcio));
            pacPatDiagList.setModel(pacModelPat);
        }
    }//GEN-LAST:event_pacPatDiagAnaActionPerformed

    private void pacAnadirPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacAnadirPatActionPerformed
        CtrlPresPaciente.muestraTabPatologia();
    }//GEN-LAST:event_pacAnadirPatActionPerformed

    private void pacEliminaPatDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacEliminaPatDiagActionPerformed
        if (false == pacPatDiagList.isSelectionEmpty()) {
            pacModelPat.remove(pacPatDiagList.getSelectedIndex());
            pacPatDiagList.setModel(pacModelPat);
        }
    }//GEN-LAST:event_pacEliminaPatDiagActionPerformed

    private void pacSinAnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacSinAnActionPerformed
        ArrayList<String> aux = CtrlPresPaciente.getNombreSintomas();
        int opcio = pacSinBox.getSelectedIndex();
        if (opcio != -1 && noContiene(pacModelSin, aux.get(opcio))) {
            pacModelSin.addElement(aux.get(opcio));
            pacSinList.setModel(pacModelSin);
        }
    }//GEN-LAST:event_pacSinAnActionPerformed

    private void pacSinNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacSinNuevoActionPerformed
        CtrlPresPaciente.muestraTabSintoma();
    }//GEN-LAST:event_pacSinNuevoActionPerformed

    private void pacEliminaSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacEliminaSinActionPerformed
        if (false == pacSinList.isSelectionEmpty()) {
            pacModelSin.remove(pacSinList.getSelectedIndex());
            pacSinList.setModel(pacModelSin);
        }
    }//GEN-LAST:event_pacEliminaSinActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton pacAdnAn;
    private javax.swing.JList pacAdnList;
    private javax.swing.JTextArea pacAdnText;
    private javax.swing.JButton pacAnadirPat;
    private javax.swing.JComboBox pacAnoBox;
    private javax.swing.JTextField pacApellido1;
    private javax.swing.JTextField pacApellido2;
    private javax.swing.JButton pacConsulta;
    private javax.swing.JComboBox pacEdadBox;
    private javax.swing.JButton pacEliminaAdn;
    private javax.swing.JButton pacEliminaPaciente;
    private javax.swing.JButton pacEliminaPatDiag;
    private javax.swing.JButton pacEliminaSin;
    private javax.swing.JList pacListaId;
    private javax.swing.JTextField pacNombre;
    private javax.swing.JButton pacNuevo;
    private javax.swing.JTextField pacNumHist;
    private javax.swing.JTextArea pacPacPotArea;
    private javax.swing.JButton pacPatDiagAna;
    private javax.swing.JComboBox pacPatDiagBox;
    private javax.swing.JList pacPatDiagList;
    private javax.swing.JButton pacRestablecer;
    private javax.swing.JComboBox pacSexoBox;
    private javax.swing.JButton pacSinAn;
    private javax.swing.JComboBox pacSinBox;
    private javax.swing.JList pacSinList;
    private javax.swing.JButton pacSinNuevo;
    // End of variables declaration//GEN-END:variables

    
    /**
     * @see Carga las listas necesarias en la interficie.
     */
    public void cargarListasPaciente() {
        listaEdad.clear();
        listaAdn.clear();
        pacListaPat.clear();
        pacListaSin.clear();
        //Lista Adn
        int size = pacModelAdn.getSize();
        for (int i = size-1; i >= 0; i--) {
            String item = pacModelAdn.getElementAt(i).toString();
            StringTokenizer tokens = new StringTokenizer(item);
            tokens.nextToken();
            listaEdad.add(Integer.parseInt(tokens.nextToken()));
            tokens.nextToken();
            listaAdn.add(tokens.nextToken());
        }
        //Lista Patologias
        size = pacModelPat.getSize();
        for (int i = 0; i < size; i++) pacListaPat.add(pacModelPat.getElementAt(i).toString());
        //Lista Sintomas
        size = pacModelSin.getSize();
        for (int i = 0; i < size; i++) pacListaSin.add(pacModelSin.getElementAt(i).toString());
    }
    
    /**
     * @see Vacia los campos y areas de texto.
     */
    public void restablecerTabPaciente() {
        // Text
        pacNombre.setText("");
        pacApellido1.setText("");
        pacApellido2.setText("");
        pacNumHist.setText("");
        pacPacPotArea.setText("");
        pacAdnText.setText("");
        //Arrays
        listaAdn.clear();
        listaEdad.clear();
        pacListaPat.clear();
        pacListaSin.clear();
        //Modelos y lists
        inicializarModelosPac();
    }
    
    /**
     * @see Guarda los cambios realizados en un paciente. Si no existe, lo aÃ±ade.
     */
    public void guardaCambiosPaciente() {
        ArrayList<String> pacN = new ArrayList();
        String[] sexo = { "m", "f" };
        ArrayList<String> year = new ArrayList();
        for(int i = 0; i < 113; i++) year.add(Integer.toString(i + 1900));
        // Recoger listas
        cargarListasPaciente();        
        // Generar array
        pacN.add(pacNumHist.getText());
        pacN.add(pacNombre.getText());
        pacN.add(pacApellido1.getText());
        pacN.add(pacApellido2.getText());
        pacN.add(sexo[pacSexoBox.getSelectedIndex()]);
        pacN.add(year.get(pacAnoBox.getSelectedIndex()));
        //ADN sequencias
        pacN.add(Integer.toString(listaAdn.size()));
        if(listaAdn.size() > 0) pacN.addAll(listaAdn);
        //ADN edades
        pacN.add(Integer.toString(listaEdad.size()));
        for( int i = 0; i < listaEdad.size(); i++) pacN.add(Integer.toString(listaEdad.get(i)));
        // Patologias padecidas
        pacN.add(Integer.toString(pacListaPat.size()));
        if(pacListaPat.size() > 0)pacN.addAll(pacListaPat);
        // Sintomas
        pacN.add(Integer.toString(pacListaSin.size()));
        if(pacListaSin.size() > 0)pacN.addAll(pacListaSin);

        CtrlPresPaciente.nuevoPaciente( pacN );

        CtrlPresPaciente.actualizaPacientes();
        restablecerTabPaciente();
    }
    
    /**
     * @see Guarda todos los pacientes en un fichero.
     */
    public void guardarFicheroPac() {
        //Es crea el filechooser
        JFileChooser direc = new JFileChooser();
        //TÃ­tol de finestra
        direc.setDialogTitle("Guardar fichero de pacientes");
        //Canviar el text del boto
        direc.setApproveButtonText("Guardar");
        int result = direc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) CtrlPresPaciente.guardarPacientes(direc);
    }
    
    /**
     * @see Actualiza la lista de pacientes.
     */
    public void actualizaPacientes() {
        ArrayList<Integer> listaPac = CtrlPresPaciente.getNHtodosO();
        // Lista de consulta
        modelPac.clear();
        for(int i = 0; i < listaPac.size(); i++) modelPac.addElement(listaPac.get(i));
        pacListaId.setModel(modelPac);
    }
    
    /**
     * @see Actualiza la lista de patologÃ­as.
     */
    public void actualizaPatologias(){
        ArrayList<String> aux = CtrlPresPaciente.getNombrePatologias();
        pacPatDiagBox.removeAllItems();
        for(int i = 0; i < aux.size(); i++) pacPatDiagBox.addItem(aux.get(i));
    }
    
    /**
     * @see Actualiza la lista de sintomas
     */
    public void actualizaSintomas(){
        ArrayList<String> aux = CtrlPresPaciente.getNombreSintomas();
        pacSinBox.removeAllItems();
        for(int i = 0; i < aux.size(); i++) pacSinBox.addItem(aux.get(i));
    }
    
    //___________ALTRES FUNCIONS____________
    private boolean noContiene(DefaultListModel model, String nom) {
        int size = model.getSize();
        for (int i = 0; i < size; i++) if(model.getElementAt(i).toString().equals(nom)) return false;
        return true;
    }    
 
    private void inicializarModelosPac() {
        pacModelAdn.clear();
        pacModelPat.clear();
        pacModelSin.clear();
        //Assigna
        pacAdnList.setModel(pacModelAdn);
        pacPatDiagList.setModel(pacModelPat);
        pacSinList.setModel(pacModelSin);
    }
}
